This code was created to showcase the use of QML to make a new, rich UI for 
the open source physics puzzle game "The Butterfly Effect"
    http://the-butterfly-effect.org .

The goals of this "spike":
 * learn how to use QT's QML
   * learn all about the new declarative approach
   * figure out the minimum Qt version needed
   * learn how to integrate C++ code and QML
   * use as little Javascript as possible
   * learn what's missing in QML and needs to be written in C++
     * undo/redo
     * collision detection
     * coordinate conversions
 * prototype a new, simpler UI
 * validate ease-of-use with a few users
 * integrate QQuickView into Qt's standard MainWindow layout
 * scale with size of window

I'll leave it up to you to judge if the above succeeded.

Still to be implemented:
 * coordinate conversions
   * introduce DPI singleton that communicates with view
   * enhance Position class
 * collision detection, and how to visualize issues with that
 * another approach to adjusting rotation
 * conditionals: only show horizontal arrows when hor resizing is allowed
 * rotation should be taken into account when calculating drag borders
 * undo/redo
 * polymorphism
   * butterfly, colamintbottle and penguin require animations
   * postit requires different clicking behavior
   * detonatorbox has a handle that needs to be addressed
 * prototype the "toolbox"
 * drag/drop from the "toolbox"
 * tooltips


kaa-ching, a.k.a. Klaas van Gend

